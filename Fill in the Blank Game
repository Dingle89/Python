# Enter into Easy/Medium/Hard a string with blanks and into the appropriate bank put your answers in a list
def Difficulty():
	"""Accept input from user return difficulty information"""
# Based on user input, this function will assign and return correct values to 
# Mode(Difficulty level), UserMode(Choice of User), AnswerBank(Answers to string), and tBlank(Total number of blanks# 
	Easy = "Easy String with Blank0, Blank1, Blank2, Blank3, Blank4."
	Medium = "Medium String with Blank0 Blank1, Blank2, Blank3, Blank4, Blank5."
	Hard = "Hard String with Blank0, Blank1, Blank2, Blank3, Blank4, Blank5, Blank6"
	
	EasyBank = ["Answer1", "Answer2", "Answer3", "Answer4", "Answer5"]
	MediumBank = ["Answer10", "Answer20", "Answer30", "Answer40", "Answer50", "Answer60"]
	HardBank = ["Answer100", "Answer200", "Answer300", "Answer400", "Answer500", "Answer600", "Answer700"]
	
	Difficulty = raw_input("Enter a difficulty. Accepted difficulties are Easy, Medium and Hard.")
	
	if Difficulty == "Easy" or Difficulty == "easy":
		Mode = Easy
		UserMode = "Easy"
		AnswerBank = EasyBank
		tBlank = len(AnswerBank)
		print "You have selected " + UserMode + ". You will have 3 guesses per Blank. Good luck."
		return	Mode, UserMode, AnswerBank, tBlank
	
	elif Difficulty == "Medium" or Difficulty == "medium":
		Mode = Medium
		UserMode = "Medium"
		AnswerBank = MediumBank
		tBlank = len(AnswerBank)
		print "You have selected " + UserMode + ". You will have 3 guesses per Blank. Good luck."
		return	Mode, UserMode, AnswerBank, tBlank
	
	elif Difficulty == "Hard" or Difficulty == "hard":
		Mode = Hard
		UserMode = "Hard"
		AnswerBank = HardBank
		tBlank = len(AnswerBank)
		print "You have selected " + UserMode + ". You will have 3 guesses per Blank. Good luck."
		return	Mode, UserMode, AnswerBank, tBlank
	
	else:
	#if user fails to enter a proper difficulty program will exit after error message
		print "Oops, it appears as though you have entered an incorrect difficulty. Please try again."
		raw_input("Next time try entering a defined difficulty. Enter any key to exit.")
		exit()


def Attempt():
	"""Uses Difficulty() to evaluate if a User Input is correct or incorrect"""
# Uses Difficulty() function to obtain Mode, UserMode, AnswerBank, and tBlank.
# Prompts user to input and answer, if correct it will report back to user and move on
# If incorrect it will report and allow another attempt
# Upon use of all attempts the user will be informed of Game Loss and program will exit
	Mode, UserMode, AnswerBank, tBlank = Difficulty()
	BankAnswer = 0
	Guesses = 3
	while Guesses > 0 and BankAnswer < tBlank:
		print Mode
		Attempt = raw_input("What word should replace Blank" + str(BankAnswer) + "? ")
		if Attempt.title() == AnswerBank[BankAnswer]:
			Mode = Mode.replace("Blank"+str(BankAnswer),AnswerBank[BankAnswer])
			BankAnswer += 1
			Guesses = 3
			print "Correct!"
		elif Attempt.title() != AnswerBank[BankAnswer]:
			Guesses -= 1
			print "Incorrect."
			print "You can guess " + str(Guesses) +  " more times."
	if BankAnswer == tBlank:
		raw_input("Good job, you win.  Enter any key to exit.")
	
	elif Guesses == 0:
		print "The answer was " + AnswerBank[BankAnswer]
		raw_input("Unfortunately you have lost.  Feel free to try again. Enter any key to exit.")

Attempt()
